# G.Music Assembly - Environment Configuration
# ‚ô†Ô∏èüåøüé∏üßµ Docker Compose Environment Variables

# Development Environment
ENV=dev

# GitHub Authentication
# Set your GitHub Personal Access Token for private repository access
GITHUB_TOKEN=ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# Docker Configuration
COMPOSE_PROJECT_NAME=gmusic-assembly
COMPOSE_FILE=docker-compose.yml

# Python Configuration
PYTHONPATH=/workspace
PYTHONUNBUFFERED=1
PYTHONDONTWRITEBYTECODE=1

# Poetry Configuration
POETRY_NO_INTERACTION=1
POETRY_VENV_IN_PROJECT=1
POETRY_CACHE_DIR=/tmp/poetry_cache

# Development Settings
DEBUG=true
LOG_LEVEL=info

# Network Configuration
DEV_NETWORK=dev-network

# Volume Configuration
WORKSPACE_PATH=./workspace

# Security Settings
# Enable/disable features based on security requirements
ENABLE_PRIVATE_REPOS=false
ENABLE_SSH_KEYS=false

# Assembly-specific Settings
ASSEMBLY_MODE=active
ASSEMBLY_TEAM=‚ô†Ô∏èüåøüé∏üßµ
ASSEMBLY_SESSION_ID=gmusic-$(date +%Y%m%d-%H%M%S)

# Repository-specific Environment Variables
# Add repository-specific configurations here
# ECHONEXUS_CONFIG_PATH=/workspace/EchoNexus/config
# ORPHEUS_API_KEY=your_api_key_here
# NYRO_DATABASE_URL=sqlite:///workspace/nyro/data.db

# Development Tools
EDITOR=vim
SHELL=/bin/bash
TERM=xterm-256color